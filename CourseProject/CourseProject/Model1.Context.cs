//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CourseProject
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACCOUNT> ACCOUNT { get; set; }
        public virtual DbSet<BLOOD_BANK> BLOOD_BANK { get; set; }
        public virtual DbSet<DONOR> DONOR { get; set; }
        public virtual DbSet<TAKER> TAKER { get; set; }
        public virtual DbSet<TRANSFER_DETAILS> TRANSFER_DETAILS { get; set; }
    
        public virtual int ADD_NEW_ACCOUNT(string p_LOGIN, string p_PASSWORD)
        {
            var p_LOGINParameter = p_LOGIN != null ?
                new ObjectParameter("P_LOGIN", p_LOGIN) :
                new ObjectParameter("P_LOGIN", typeof(string));
    
            var p_PASSWORDParameter = p_PASSWORD != null ?
                new ObjectParameter("P_PASSWORD", p_PASSWORD) :
                new ObjectParameter("P_PASSWORD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_NEW_ACCOUNT", p_LOGINParameter, p_PASSWORDParameter);
        }
    
        public virtual int ADD_NEW_BLOOD_BANK(string bBID, string bBNAME, string bBBGROUP, Nullable<decimal> bBBAMOUNT, Nullable<System.DateTime> bBCHAECKINGD)
        {
            var bBIDParameter = bBID != null ?
                new ObjectParameter("BBID", bBID) :
                new ObjectParameter("BBID", typeof(string));
    
            var bBNAMEParameter = bBNAME != null ?
                new ObjectParameter("BBNAME", bBNAME) :
                new ObjectParameter("BBNAME", typeof(string));
    
            var bBBGROUPParameter = bBBGROUP != null ?
                new ObjectParameter("BBBGROUP", bBBGROUP) :
                new ObjectParameter("BBBGROUP", typeof(string));
    
            var bBBAMOUNTParameter = bBBAMOUNT.HasValue ?
                new ObjectParameter("BBBAMOUNT", bBBAMOUNT) :
                new ObjectParameter("BBBAMOUNT", typeof(decimal));
    
            var bBCHAECKINGDParameter = bBCHAECKINGD.HasValue ?
                new ObjectParameter("BBCHAECKINGD", bBCHAECKINGD) :
                new ObjectParameter("BBCHAECKINGD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_NEW_BLOOD_BANK", bBIDParameter, bBNAMEParameter, bBBGROUPParameter, bBBAMOUNTParameter, bBCHAECKINGDParameter);
        }
    
        public virtual int ADD_NEW_DONOR(string dNAME, string dBLOOD, string dADDRESS, string dCONTACT, Nullable<System.DateTime> dLDD)
        {
            var dNAMEParameter = dNAME != null ?
                new ObjectParameter("DNAME", dNAME) :
                new ObjectParameter("DNAME", typeof(string));
    
            var dBLOODParameter = dBLOOD != null ?
                new ObjectParameter("DBLOOD", dBLOOD) :
                new ObjectParameter("DBLOOD", typeof(string));
    
            var dADDRESSParameter = dADDRESS != null ?
                new ObjectParameter("DADDRESS", dADDRESS) :
                new ObjectParameter("DADDRESS", typeof(string));
    
            var dCONTACTParameter = dCONTACT != null ?
                new ObjectParameter("DCONTACT", dCONTACT) :
                new ObjectParameter("DCONTACT", typeof(string));
    
            var dLDDParameter = dLDD.HasValue ?
                new ObjectParameter("DLDD", dLDD) :
                new ObjectParameter("DLDD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_NEW_DONOR", dNAMEParameter, dBLOODParameter, dADDRESSParameter, dCONTACTParameter, dLDDParameter);
        }
    
        public virtual int ADD_NEW_TAKER(string tNAME, string tBLOOD, string tADDRESS, string tCONTACT)
        {
            var tNAMEParameter = tNAME != null ?
                new ObjectParameter("TNAME", tNAME) :
                new ObjectParameter("TNAME", typeof(string));
    
            var tBLOODParameter = tBLOOD != null ?
                new ObjectParameter("TBLOOD", tBLOOD) :
                new ObjectParameter("TBLOOD", typeof(string));
    
            var tADDRESSParameter = tADDRESS != null ?
                new ObjectParameter("TADDRESS", tADDRESS) :
                new ObjectParameter("TADDRESS", typeof(string));
    
            var tCONTACTParameter = tCONTACT != null ?
                new ObjectParameter("TCONTACT", tCONTACT) :
                new ObjectParameter("TCONTACT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_NEW_TAKER", tNAMEParameter, tBLOODParameter, tADDRESSParameter, tCONTACTParameter);
        }
    
        public virtual int ADD_NEW_TRANSFER_DETAILS(string bBID, Nullable<decimal> dONORID, Nullable<decimal> tAKERID, string bLOODGROUP, Nullable<decimal> bLOODAMOUNT, Nullable<System.DateTime> tRANSFERDATE)
        {
            var bBIDParameter = bBID != null ?
                new ObjectParameter("BBID", bBID) :
                new ObjectParameter("BBID", typeof(string));
    
            var dONORIDParameter = dONORID.HasValue ?
                new ObjectParameter("DONORID", dONORID) :
                new ObjectParameter("DONORID", typeof(decimal));
    
            var tAKERIDParameter = tAKERID.HasValue ?
                new ObjectParameter("TAKERID", tAKERID) :
                new ObjectParameter("TAKERID", typeof(decimal));
    
            var bLOODGROUPParameter = bLOODGROUP != null ?
                new ObjectParameter("BLOODGROUP", bLOODGROUP) :
                new ObjectParameter("BLOODGROUP", typeof(string));
    
            var bLOODAMOUNTParameter = bLOODAMOUNT.HasValue ?
                new ObjectParameter("BLOODAMOUNT", bLOODAMOUNT) :
                new ObjectParameter("BLOODAMOUNT", typeof(decimal));
    
            var tRANSFERDATEParameter = tRANSFERDATE.HasValue ?
                new ObjectParameter("TRANSFERDATE", tRANSFERDATE) :
                new ObjectParameter("TRANSFERDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_NEW_TRANSFER_DETAILS", bBIDParameter, dONORIDParameter, tAKERIDParameter, bLOODGROUPParameter, bLOODAMOUNTParameter, tRANSFERDATEParameter);
        }
    
        public virtual int DELETE_ACCOUNT(Nullable<decimal> aCCOUNTID)
        {
            var aCCOUNTIDParameter = aCCOUNTID.HasValue ?
                new ObjectParameter("ACCOUNTID", aCCOUNTID) :
                new ObjectParameter("ACCOUNTID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_ACCOUNT", aCCOUNTIDParameter);
        }
    
        public virtual int DELETE_BLOOD_BANK(string bB_ID)
        {
            var bB_IDParameter = bB_ID != null ?
                new ObjectParameter("BB_ID", bB_ID) :
                new ObjectParameter("BB_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_BLOOD_BANK", bB_IDParameter);
        }
    
        public virtual int DELETE_DONOR(Nullable<decimal> d_ID)
        {
            var d_IDParameter = d_ID.HasValue ?
                new ObjectParameter("D_ID", d_ID) :
                new ObjectParameter("D_ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_DONOR", d_IDParameter);
        }
    
        public virtual int DELETE_TAKER(Nullable<decimal> t_ID)
        {
            var t_IDParameter = t_ID.HasValue ?
                new ObjectParameter("T_ID", t_ID) :
                new ObjectParameter("T_ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_TAKER", t_IDParameter);
        }
    
        public virtual int DELETE_TRANSF_DET_BY_PARAMS(string bBID, Nullable<decimal> dONORID, Nullable<decimal> tAKERID)
        {
            var bBIDParameter = bBID != null ?
                new ObjectParameter("BBID", bBID) :
                new ObjectParameter("BBID", typeof(string));
    
            var dONORIDParameter = dONORID.HasValue ?
                new ObjectParameter("DONORID", dONORID) :
                new ObjectParameter("DONORID", typeof(decimal));
    
            var tAKERIDParameter = tAKERID.HasValue ?
                new ObjectParameter("TAKERID", tAKERID) :
                new ObjectParameter("TAKERID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_TRANSF_DET_BY_PARAMS", bBIDParameter, dONORIDParameter, tAKERIDParameter);
        }
    
        public virtual int DELETE_TRANSFER_DETAILS(Nullable<decimal> tRANSFERID)
        {
            var tRANSFERIDParameter = tRANSFERID.HasValue ?
                new ObjectParameter("TRANSFERID", tRANSFERID) :
                new ObjectParameter("TRANSFERID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_TRANSFER_DETAILS", tRANSFERIDParameter);
        }
    
        public virtual ObjectResult<FIND_AVAIL_DONORS_BY_GR_ADDR_Result> FIND_AVAIL_DONORS_BY_GR_ADDR(string cHECK_BLOOD_GROUP, string cHECK_DONOE_ADDRESS)
        {
            var cHECK_BLOOD_GROUPParameter = cHECK_BLOOD_GROUP != null ?
                new ObjectParameter("CHECK_BLOOD_GROUP", cHECK_BLOOD_GROUP) :
                new ObjectParameter("CHECK_BLOOD_GROUP", typeof(string));
    
            var cHECK_DONOE_ADDRESSParameter = cHECK_DONOE_ADDRESS != null ?
                new ObjectParameter("CHECK_DONOE_ADDRESS", cHECK_DONOE_ADDRESS) :
                new ObjectParameter("CHECK_DONOE_ADDRESS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FIND_AVAIL_DONORS_BY_GR_ADDR_Result>("FIND_AVAIL_DONORS_BY_GR_ADDR", cHECK_BLOOD_GROUPParameter, cHECK_DONOE_ADDRESSParameter);
        }
    
        public virtual ObjectResult<FIND_DONORS_BY_BLOODGROUP_Result> FIND_DONORS_BY_BLOODGROUP(string cHECK_BLOOD_GROUP)
        {
            var cHECK_BLOOD_GROUPParameter = cHECK_BLOOD_GROUP != null ?
                new ObjectParameter("CHECK_BLOOD_GROUP", cHECK_BLOOD_GROUP) :
                new ObjectParameter("CHECK_BLOOD_GROUP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FIND_DONORS_BY_BLOODGROUP_Result>("FIND_DONORS_BY_BLOODGROUP", cHECK_BLOOD_GROUPParameter);
        }
    
        public virtual ObjectResult<FIND_UNAVAIL_DONORS_BY_GR_ADDR_Result> FIND_UNAVAIL_DONORS_BY_GR_ADDR(string cHECK_BLOOD_GROUP, string cHECK_DONOE_ADDRESS)
        {
            var cHECK_BLOOD_GROUPParameter = cHECK_BLOOD_GROUP != null ?
                new ObjectParameter("CHECK_BLOOD_GROUP", cHECK_BLOOD_GROUP) :
                new ObjectParameter("CHECK_BLOOD_GROUP", typeof(string));
    
            var cHECK_DONOE_ADDRESSParameter = cHECK_DONOE_ADDRESS != null ?
                new ObjectParameter("CHECK_DONOE_ADDRESS", cHECK_DONOE_ADDRESS) :
                new ObjectParameter("CHECK_DONOE_ADDRESS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FIND_UNAVAIL_DONORS_BY_GR_ADDR_Result>("FIND_UNAVAIL_DONORS_BY_GR_ADDR", cHECK_BLOOD_GROUPParameter, cHECK_DONOE_ADDRESSParameter);
        }
    
        public virtual ObjectResult<GETACCOUNTS_Result> GETACCOUNTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETACCOUNTS_Result>("GETACCOUNTS");
        }
    
        public virtual ObjectResult<GETBLOOD_BANKS_Result> GETBLOOD_BANKS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETBLOOD_BANKS_Result>("GETBLOOD_BANKS");
        }
    
        public virtual ObjectResult<GET_BLOOD_LEADER_Result> GET_BLOOD_LEADER(Nullable<System.DateTime> sTART_DATE, Nullable<System.DateTime> eND_DATE)
        {
            var sTART_DATEParameter = sTART_DATE.HasValue ?
                new ObjectParameter("START_DATE", sTART_DATE) :
                new ObjectParameter("START_DATE", typeof(System.DateTime));
    
            var eND_DATEParameter = eND_DATE.HasValue ?
                new ObjectParameter("END_DATE", eND_DATE) :
                new ObjectParameter("END_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_BLOOD_LEADER_Result>("GET_BLOOD_LEADER", sTART_DATEParameter, eND_DATEParameter);
        }
    
        public virtual int GETDONOR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GETDONOR");
        }
    
        public virtual ObjectResult<GETDONORS_Result> GETDONORS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETDONORS_Result>("GETDONORS");
        }
    
        public virtual ObjectResult<GETTAKERS_Result> GETTAKERS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETTAKERS_Result>("GETTAKERS");
        }
    
        public virtual ObjectResult<GETTRANSFER_DETAILS_Result> GETTRANSFER_DETAILS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETTRANSFER_DETAILS_Result>("GETTRANSFER_DETAILS");
        }
    
        public virtual int GETTRANSFER_DETAILS_FOR_CLIEN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GETTRANSFER_DETAILS_FOR_CLIEN");
        }
    
        public virtual int UPDATE_ACCOUNT(Nullable<decimal> aCCID, string aCCLOGIN, string aCCPASSWORD)
        {
            var aCCIDParameter = aCCID.HasValue ?
                new ObjectParameter("ACCID", aCCID) :
                new ObjectParameter("ACCID", typeof(decimal));
    
            var aCCLOGINParameter = aCCLOGIN != null ?
                new ObjectParameter("ACCLOGIN", aCCLOGIN) :
                new ObjectParameter("ACCLOGIN", typeof(string));
    
            var aCCPASSWORDParameter = aCCPASSWORD != null ?
                new ObjectParameter("ACCPASSWORD", aCCPASSWORD) :
                new ObjectParameter("ACCPASSWORD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_ACCOUNT", aCCIDParameter, aCCLOGINParameter, aCCPASSWORDParameter);
        }
    
        public virtual int UPDATE_BLOOD_BANK(string iD, string bGROUP, Nullable<decimal> aMOUNT)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var bGROUPParameter = bGROUP != null ?
                new ObjectParameter("BGROUP", bGROUP) :
                new ObjectParameter("BGROUP", typeof(string));
    
            var aMOUNTParameter = aMOUNT.HasValue ?
                new ObjectParameter("AMOUNT", aMOUNT) :
                new ObjectParameter("AMOUNT", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_BLOOD_BANK", iDParameter, bGROUPParameter, aMOUNTParameter);
        }
    
        public virtual int UPDATE_DONOR_INFO(Nullable<decimal> d_ID, string dNAME, string dADDRESS, string dCONTACT, Nullable<System.DateTime> dLDD)
        {
            var d_IDParameter = d_ID.HasValue ?
                new ObjectParameter("D_ID", d_ID) :
                new ObjectParameter("D_ID", typeof(decimal));
    
            var dNAMEParameter = dNAME != null ?
                new ObjectParameter("DNAME", dNAME) :
                new ObjectParameter("DNAME", typeof(string));
    
            var dADDRESSParameter = dADDRESS != null ?
                new ObjectParameter("DADDRESS", dADDRESS) :
                new ObjectParameter("DADDRESS", typeof(string));
    
            var dCONTACTParameter = dCONTACT != null ?
                new ObjectParameter("DCONTACT", dCONTACT) :
                new ObjectParameter("DCONTACT", typeof(string));
    
            var dLDDParameter = dLDD.HasValue ?
                new ObjectParameter("DLDD", dLDD) :
                new ObjectParameter("DLDD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_DONOR_INFO", d_IDParameter, dNAMEParameter, dADDRESSParameter, dCONTACTParameter, dLDDParameter);
        }
    
        public virtual int UPDATE_TAKER_INFO(Nullable<decimal> t_ID, string tNAME, string tADDRESS, string tCONTACT)
        {
            var t_IDParameter = t_ID.HasValue ?
                new ObjectParameter("T_ID", t_ID) :
                new ObjectParameter("T_ID", typeof(decimal));
    
            var tNAMEParameter = tNAME != null ?
                new ObjectParameter("TNAME", tNAME) :
                new ObjectParameter("TNAME", typeof(string));
    
            var tADDRESSParameter = tADDRESS != null ?
                new ObjectParameter("TADDRESS", tADDRESS) :
                new ObjectParameter("TADDRESS", typeof(string));
    
            var tCONTACTParameter = tCONTACT != null ?
                new ObjectParameter("TCONTACT", tCONTACT) :
                new ObjectParameter("TCONTACT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_TAKER_INFO", t_IDParameter, tNAMEParameter, tADDRESSParameter, tCONTACTParameter);
        }
    
        public virtual int UPDATE_TRANSFER_DETAILS(Nullable<decimal> tID, string bBID, Nullable<decimal> dONORID, Nullable<decimal> tAKERID, string bLOODGROUP, Nullable<decimal> bLOODAMOUNT, Nullable<System.DateTime> tRANSFERDATE)
        {
            var tIDParameter = tID.HasValue ?
                new ObjectParameter("TID", tID) :
                new ObjectParameter("TID", typeof(decimal));
    
            var bBIDParameter = bBID != null ?
                new ObjectParameter("BBID", bBID) :
                new ObjectParameter("BBID", typeof(string));
    
            var dONORIDParameter = dONORID.HasValue ?
                new ObjectParameter("DONORID", dONORID) :
                new ObjectParameter("DONORID", typeof(decimal));
    
            var tAKERIDParameter = tAKERID.HasValue ?
                new ObjectParameter("TAKERID", tAKERID) :
                new ObjectParameter("TAKERID", typeof(decimal));
    
            var bLOODGROUPParameter = bLOODGROUP != null ?
                new ObjectParameter("BLOODGROUP", bLOODGROUP) :
                new ObjectParameter("BLOODGROUP", typeof(string));
    
            var bLOODAMOUNTParameter = bLOODAMOUNT.HasValue ?
                new ObjectParameter("BLOODAMOUNT", bLOODAMOUNT) :
                new ObjectParameter("BLOODAMOUNT", typeof(decimal));
    
            var tRANSFERDATEParameter = tRANSFERDATE.HasValue ?
                new ObjectParameter("TRANSFERDATE", tRANSFERDATE) :
                new ObjectParameter("TRANSFERDATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_TRANSFER_DETAILS", tIDParameter, bBIDParameter, dONORIDParameter, tAKERIDParameter, bLOODGROUPParameter, bLOODAMOUNTParameter, tRANSFERDATEParameter);
        }
    
        public virtual ObjectResult<NUM_OF_TRANSF_Result> NUM_OF_TRANSF(Nullable<System.DateTime> tRANSFER_DATE_IN)
        {
            var tRANSFER_DATE_INParameter = tRANSFER_DATE_IN.HasValue ?
                new ObjectParameter("TRANSFER_DATE_IN", tRANSFER_DATE_IN) :
                new ObjectParameter("TRANSFER_DATE_IN", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NUM_OF_TRANSF_Result>("NUM_OF_TRANSF", tRANSFER_DATE_INParameter);
        }
    
        public virtual ObjectResult<VOLUME_OF_BLOOD_TRANSF_ON_DATE_Result> VOLUME_OF_BLOOD_TRANSF_ON_DATE(Nullable<System.DateTime> sELECTED_DATE)
        {
            var sELECTED_DATEParameter = sELECTED_DATE.HasValue ?
                new ObjectParameter("SELECTED_DATE", sELECTED_DATE) :
                new ObjectParameter("SELECTED_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VOLUME_OF_BLOOD_TRANSF_ON_DATE_Result>("VOLUME_OF_BLOOD_TRANSF_ON_DATE", sELECTED_DATEParameter);
        }
    
        public virtual int EXPORT_TAKERS_TO_XML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EXPORT_TAKERS_TO_XML");
        }
    
        public virtual int IMPORT_TAKERS_FROM_XML()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IMPORT_TAKERS_FROM_XML");
        }
    }
}
